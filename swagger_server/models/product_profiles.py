# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.product_aboutus import ProductAboutus  # noqa: F401,E501
from swagger_server.models.product_businesses import ProductBusinesses  # noqa: F401,E501
from swagger_server.models.product_projects import ProductProjects  # noqa: F401,E501
from swagger_server import util


class ProductProfiles(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, p_uid: str=None, projects: ProductProjects=None, business: ProductBusinesses=None, aboutus: ProductAboutus=None):  # noqa: E501
        """ProductProfiles - a model defined in Swagger

        :param p_uid: The p_uid of this ProductProfiles.  # noqa: E501
        :type p_uid: str
        :param projects: The projects of this ProductProfiles.  # noqa: E501
        :type projects: ProductProjects
        :param business: The business of this ProductProfiles.  # noqa: E501
        :type business: ProductBusinesses
        :param aboutus: The aboutus of this ProductProfiles.  # noqa: E501
        :type aboutus: ProductAboutus
        """
        self.swagger_types = {
            'p_uid': str,
            'projects': ProductProjects,
            'business': ProductBusinesses,
            'aboutus': ProductAboutus
        }

        self.attribute_map = {
            'p_uid': 'p_uid',
            'projects': 'projects',
            'business': 'business',
            'aboutus': 'aboutus'
        }
        self._p_uid = p_uid
        self._projects = projects
        self._business = business
        self._aboutus = aboutus

    @classmethod
    def from_dict(cls, dikt) -> 'ProductProfiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Product_profiles of this ProductProfiles.  # noqa: E501
        :rtype: ProductProfiles
        """
        return util.deserialize_model(dikt, cls)

    @property
    def p_uid(self) -> str:
        """Gets the p_uid of this ProductProfiles.

        product id  # noqa: E501

        :return: The p_uid of this ProductProfiles.
        :rtype: str
        """
        return self._p_uid

    @p_uid.setter
    def p_uid(self, p_uid: str):
        """Sets the p_uid of this ProductProfiles.

        product id  # noqa: E501

        :param p_uid: The p_uid of this ProductProfiles.
        :type p_uid: str
        """

        self._p_uid = p_uid

    @property
    def projects(self) -> ProductProjects:
        """Gets the projects of this ProductProfiles.


        :return: The projects of this ProductProfiles.
        :rtype: ProductProjects
        """
        return self._projects

    @projects.setter
    def projects(self, projects: ProductProjects):
        """Sets the projects of this ProductProfiles.


        :param projects: The projects of this ProductProfiles.
        :type projects: ProductProjects
        """

        self._projects = projects

    @property
    def business(self) -> ProductBusinesses:
        """Gets the business of this ProductProfiles.


        :return: The business of this ProductProfiles.
        :rtype: ProductBusinesses
        """
        return self._business

    @business.setter
    def business(self, business: ProductBusinesses):
        """Sets the business of this ProductProfiles.


        :param business: The business of this ProductProfiles.
        :type business: ProductBusinesses
        """

        self._business = business

    @property
    def aboutus(self) -> ProductAboutus:
        """Gets the aboutus of this ProductProfiles.


        :return: The aboutus of this ProductProfiles.
        :rtype: ProductAboutus
        """
        return self._aboutus

    @aboutus.setter
    def aboutus(self, aboutus: ProductAboutus):
        """Sets the aboutus of this ProductProfiles.


        :param aboutus: The aboutus of this ProductProfiles.
        :type aboutus: ProductAboutus
        """

        self._aboutus = aboutus
