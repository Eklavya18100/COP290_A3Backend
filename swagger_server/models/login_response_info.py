# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LoginResponseInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uid: str=None, username: str=None, session_id: str=None):  # noqa: E501
        """LoginResponseInfo - a model defined in Swagger

        :param uid: The uid of this LoginResponseInfo.  # noqa: E501
        :type uid: str
        :param username: The username of this LoginResponseInfo.  # noqa: E501
        :type username: str
        :param session_id: The session_id of this LoginResponseInfo.  # noqa: E501
        :type session_id: str
        """
        self.swagger_types = {
            'uid': str,
            'username': str,
            'session_id': str
        }

        self.attribute_map = {
            'uid': 'uid',
            'username': 'username',
            'session_id': 'session_id'
        }
        self._uid = uid
        self._username = username
        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt) -> 'LoginResponseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LoginResponse_info of this LoginResponseInfo.  # noqa: E501
        :rtype: LoginResponseInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uid(self) -> str:
        """Gets the uid of this LoginResponseInfo.

        unique id of user (customer or contractor)  # noqa: E501

        :return: The uid of this LoginResponseInfo.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this LoginResponseInfo.

        unique id of user (customer or contractor)  # noqa: E501

        :param uid: The uid of this LoginResponseInfo.
        :type uid: str
        """

        self._uid = uid

    @property
    def username(self) -> str:
        """Gets the username of this LoginResponseInfo.


        :return: The username of this LoginResponseInfo.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this LoginResponseInfo.


        :param username: The username of this LoginResponseInfo.
        :type username: str
        """

        self._username = username

    @property
    def session_id(self) -> str:
        """Gets the session_id of this LoginResponseInfo.


        :return: The session_id of this LoginResponseInfo.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this LoginResponseInfo.


        :param session_id: The session_id of this LoginResponseInfo.
        :type session_id: str
        """

        self._session_id = session_id
