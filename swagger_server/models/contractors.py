# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Contractors(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, contractor_id: str=None, username: str=None, emailid: str=None, phone_number: int=None, address: str=None, company_uid: str=None):  # noqa: E501
        """Contractors - a model defined in Swagger

        :param contractor_id: The contractor_id of this Contractors.  # noqa: E501
        :type contractor_id: str
        :param username: The username of this Contractors.  # noqa: E501
        :type username: str
        :param emailid: The emailid of this Contractors.  # noqa: E501
        :type emailid: str
        :param phone_number: The phone_number of this Contractors.  # noqa: E501
        :type phone_number: int
        :param address: The address of this Contractors.  # noqa: E501
        :type address: str
        :param company_uid: The company_uid of this Contractors.  # noqa: E501
        :type company_uid: str
        """
        self.swagger_types = {
            'contractor_id': str,
            'username': str,
            'emailid': str,
            'phone_number': int,
            'address': str,
            'company_uid': str
        }

        self.attribute_map = {
            'contractor_id': 'contractor_id',
            'username': 'username',
            'emailid': 'emailid',
            'phone_number': 'phone_number',
            'address': 'address',
            'company_uid': 'company_uid'
        }
        self._contractor_id = contractor_id
        self._username = username
        self._emailid = emailid
        self._phone_number = phone_number
        self._address = address
        self._company_uid = company_uid

    @classmethod
    def from_dict(cls, dikt) -> 'Contractors':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Contractors of this Contractors.  # noqa: E501
        :rtype: Contractors
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contractor_id(self) -> str:
        """Gets the contractor_id of this Contractors.

        contractor id  # noqa: E501

        :return: The contractor_id of this Contractors.
        :rtype: str
        """
        return self._contractor_id

    @contractor_id.setter
    def contractor_id(self, contractor_id: str):
        """Sets the contractor_id of this Contractors.

        contractor id  # noqa: E501

        :param contractor_id: The contractor_id of this Contractors.
        :type contractor_id: str
        """

        self._contractor_id = contractor_id

    @property
    def username(self) -> str:
        """Gets the username of this Contractors.


        :return: The username of this Contractors.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this Contractors.


        :param username: The username of this Contractors.
        :type username: str
        """

        self._username = username

    @property
    def emailid(self) -> str:
        """Gets the emailid of this Contractors.


        :return: The emailid of this Contractors.
        :rtype: str
        """
        return self._emailid

    @emailid.setter
    def emailid(self, emailid: str):
        """Sets the emailid of this Contractors.


        :param emailid: The emailid of this Contractors.
        :type emailid: str
        """

        self._emailid = emailid

    @property
    def phone_number(self) -> int:
        """Gets the phone_number of this Contractors.


        :return: The phone_number of this Contractors.
        :rtype: int
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: int):
        """Sets the phone_number of this Contractors.


        :param phone_number: The phone_number of this Contractors.
        :type phone_number: int
        """

        self._phone_number = phone_number

    @property
    def address(self) -> str:
        """Gets the address of this Contractors.


        :return: The address of this Contractors.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Contractors.


        :param address: The address of this Contractors.
        :type address: str
        """

        self._address = address

    @property
    def company_uid(self) -> str:
        """Gets the company_uid of this Contractors.

        company id which has hired contractor  # noqa: E501

        :return: The company_uid of this Contractors.
        :rtype: str
        """
        return self._company_uid

    @company_uid.setter
    def company_uid(self, company_uid: str):
        """Sets the company_uid of this Contractors.

        company id which has hired contractor  # noqa: E501

        :param company_uid: The company_uid of this Contractors.
        :type company_uid: str
        """

        self._company_uid = company_uid
