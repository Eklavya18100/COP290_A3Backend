# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.register_response_info import RegisterResponseInfo  # noqa: F401,E501
from swagger_server import util


class RegisterResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, info: RegisterResponseInfo=None):  # noqa: E501
        """RegisterResponse - a model defined in Swagger

        :param token: The token of this RegisterResponse.  # noqa: E501
        :type token: str
        :param info: The info of this RegisterResponse.  # noqa: E501
        :type info: RegisterResponseInfo
        """
        self.swagger_types = {
            'token': str,
            'info': RegisterResponseInfo
        }

        self.attribute_map = {
            'token': 'token',
            'info': 'info'
        }
        self._token = token
        self._info = info

    @classmethod
    def from_dict(cls, dikt) -> 'RegisterResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RegisterResponse of this RegisterResponse.  # noqa: E501
        :rtype: RegisterResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this RegisterResponse.


        :return: The token of this RegisterResponse.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this RegisterResponse.


        :param token: The token of this RegisterResponse.
        :type token: str
        """

        self._token = token

    @property
    def info(self) -> RegisterResponseInfo:
        """Gets the info of this RegisterResponse.


        :return: The info of this RegisterResponse.
        :rtype: RegisterResponseInfo
        """
        return self._info

    @info.setter
    def info(self, info: RegisterResponseInfo):
        """Sets the info of this RegisterResponse.


        :param info: The info of this RegisterResponse.
        :type info: RegisterResponseInfo
        """

        self._info = info
