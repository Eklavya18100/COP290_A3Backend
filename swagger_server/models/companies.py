# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Companies(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, company_uid: str=None, name: str=None, company_img_url: str=None, address: str=None):  # noqa: E501
        """Companies - a model defined in Swagger

        :param company_uid: The company_uid of this Companies.  # noqa: E501
        :type company_uid: str
        :param name: The name of this Companies.  # noqa: E501
        :type name: str
        :param company_img_url: The company_img_url of this Companies.  # noqa: E501
        :type company_img_url: str
        :param address: The address of this Companies.  # noqa: E501
        :type address: str
        """
        self.swagger_types = {
            'company_uid': str,
            'name': str,
            'company_img_url': str,
            'address': str
        }

        self.attribute_map = {
            'company_uid': 'company_uid',
            'name': 'name',
            'company_img_url': 'company_img_url',
            'address': 'address'
        }
        self._company_uid = company_uid
        self._name = name
        self._company_img_url = company_img_url
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'Companies':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Companies of this Companies.  # noqa: E501
        :rtype: Companies
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_uid(self) -> str:
        """Gets the company_uid of this Companies.

        company id  # noqa: E501

        :return: The company_uid of this Companies.
        :rtype: str
        """
        return self._company_uid

    @company_uid.setter
    def company_uid(self, company_uid: str):
        """Sets the company_uid of this Companies.

        company id  # noqa: E501

        :param company_uid: The company_uid of this Companies.
        :type company_uid: str
        """

        self._company_uid = company_uid

    @property
    def name(self) -> str:
        """Gets the name of this Companies.


        :return: The name of this Companies.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Companies.


        :param name: The name of this Companies.
        :type name: str
        """

        self._name = name

    @property
    def company_img_url(self) -> str:
        """Gets the company_img_url of this Companies.


        :return: The company_img_url of this Companies.
        :rtype: str
        """
        return self._company_img_url

    @company_img_url.setter
    def company_img_url(self, company_img_url: str):
        """Sets the company_img_url of this Companies.


        :param company_img_url: The company_img_url of this Companies.
        :type company_img_url: str
        """

        self._company_img_url = company_img_url

    @property
    def address(self) -> str:
        """Gets the address of this Companies.


        :return: The address of this Companies.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Companies.


        :param address: The address of this Companies.
        :type address: str
        """

        self._address = address
