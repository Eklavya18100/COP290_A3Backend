# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.companies import Companies  # noqa: F401,E501
from swagger_server.models.contractors import Contractors  # noqa: F401,E501
from swagger_server import util


class ProductLists(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, p_uid: str=None, p_img_url: str=None, p_description: str=None, company: Companies=None, p_contractor: Contractors=None):  # noqa: E501
        """ProductLists - a model defined in Swagger

        :param id: The id of this ProductLists.  # noqa: E501
        :type id: str
        :param p_uid: The p_uid of this ProductLists.  # noqa: E501
        :type p_uid: str
        :param p_img_url: The p_img_url of this ProductLists.  # noqa: E501
        :type p_img_url: str
        :param p_description: The p_description of this ProductLists.  # noqa: E501
        :type p_description: str
        :param company: The company of this ProductLists.  # noqa: E501
        :type company: Companies
        :param p_contractor: The p_contractor of this ProductLists.  # noqa: E501
        :type p_contractor: Contractors
        """
        self.swagger_types = {
            'id': str,
            'p_uid': str,
            'p_img_url': str,
            'p_description': str,
            'company': Companies,
            'p_contractor': Contractors
        }

        self.attribute_map = {
            'id': 'id',
            'p_uid': 'p_uid',
            'p_img_url': 'p_img_url',
            'p_description': 'p_description',
            'company': 'company',
            'p_contractor': 'p_contractor'
        }
        self._id = id
        self._p_uid = p_uid
        self._p_img_url = p_img_url
        self._p_description = p_description
        self._company = company
        self._p_contractor = p_contractor

    @classmethod
    def from_dict(cls, dikt) -> 'ProductLists':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Product_lists of this ProductLists.  # noqa: E501
        :rtype: ProductLists
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ProductLists.


        :return: The id of this ProductLists.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ProductLists.


        :param id: The id of this ProductLists.
        :type id: str
        """

        self._id = id

    @property
    def p_uid(self) -> str:
        """Gets the p_uid of this ProductLists.

        product id  # noqa: E501

        :return: The p_uid of this ProductLists.
        :rtype: str
        """
        return self._p_uid

    @p_uid.setter
    def p_uid(self, p_uid: str):
        """Sets the p_uid of this ProductLists.

        product id  # noqa: E501

        :param p_uid: The p_uid of this ProductLists.
        :type p_uid: str
        """

        self._p_uid = p_uid

    @property
    def p_img_url(self) -> str:
        """Gets the p_img_url of this ProductLists.

        product image link  # noqa: E501

        :return: The p_img_url of this ProductLists.
        :rtype: str
        """
        return self._p_img_url

    @p_img_url.setter
    def p_img_url(self, p_img_url: str):
        """Sets the p_img_url of this ProductLists.

        product image link  # noqa: E501

        :param p_img_url: The p_img_url of this ProductLists.
        :type p_img_url: str
        """

        self._p_img_url = p_img_url

    @property
    def p_description(self) -> str:
        """Gets the p_description of this ProductLists.

        details of the product  # noqa: E501

        :return: The p_description of this ProductLists.
        :rtype: str
        """
        return self._p_description

    @p_description.setter
    def p_description(self, p_description: str):
        """Sets the p_description of this ProductLists.

        details of the product  # noqa: E501

        :param p_description: The p_description of this ProductLists.
        :type p_description: str
        """

        self._p_description = p_description

    @property
    def company(self) -> Companies:
        """Gets the company of this ProductLists.


        :return: The company of this ProductLists.
        :rtype: Companies
        """
        return self._company

    @company.setter
    def company(self, company: Companies):
        """Sets the company of this ProductLists.


        :param company: The company of this ProductLists.
        :type company: Companies
        """

        self._company = company

    @property
    def p_contractor(self) -> Contractors:
        """Gets the p_contractor of this ProductLists.


        :return: The p_contractor of this ProductLists.
        :rtype: Contractors
        """
        return self._p_contractor

    @p_contractor.setter
    def p_contractor(self, p_contractor: Contractors):
        """Sets the p_contractor of this ProductLists.


        :param p_contractor: The p_contractor of this ProductLists.
        :type p_contractor: Contractors
        """

        self._p_contractor = p_contractor
